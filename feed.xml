<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://alvinzhengq.github.io/CSA-Data-Structures/</id><title>Alvin Zheng</title><subtitle>Alvin's Data Structures 2 individual code and notes.</subtitle> <updated>2022-05-01T05:26:21+00:00</updated> <author> <name>Alvin Zheng</name> <uri>https://alvinzhengq.github.io/CSA-Data-Structures/</uri> </author><link rel="self" type="application/atom+xml" href="https://alvinzhengq.github.io/CSA-Data-Structures/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://alvinzhengq.github.io/CSA-Data-Structures/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Alvin Zheng </rights> <icon>/CSA-Data-Structures/assets/img/favicons/favicon.ico</icon> <logo>/CSA-Data-Structures/assets/img/favicons/favicon-96x96.png</logo> <entry><title>2020 Mock FRQ</title><link href="https://alvinzhengq.github.io/CSA-Data-Structures/posts/frq20/" rel="alternate" type="text/html" title="2020 Mock FRQ" /><published>2022-04-28T00:00:00+00:00</published> <updated>2022-05-01T05:25:58+00:00</updated> <id>https://alvinzhengq.github.io/CSA-Data-Structures/posts/frq20/</id> <content src="https://alvinzhengq.github.io/CSA-Data-Structures/posts/frq20/" /> <author> <name>Alvin Zheng</name> </author> <summary> Code Question 1: Question 2: </summary> </entry> <entry><title>2020 Mock MCQ Corrections</title><link href="https://alvinzhengq.github.io/CSA-Data-Structures/posts/mcq20/" rel="alternate" type="text/html" title="2020 Mock MCQ Corrections" /><published>2022-04-26T00:00:00+00:00</published> <updated>2022-04-26T00:00:00+00:00</updated> <id>https://alvinzhengq.github.io/CSA-Data-Structures/posts/mcq20/</id> <content src="https://alvinzhengq.github.io/CSA-Data-Structures/posts/mcq20/" /> <author> <name>Alvin Zheng</name> </author> <summary> Result Corrections: Question 9 .set and .add is specified with (index, value), not (value, index) as I orignally assumed. Correct Answer: B Question 12 !borrower.equals(null) would not work because if borrower was null to begin with, than calling .equals would result in a null pointer error. Correct Answer: B Question 17 Did not account for the initial power level passed to the const... </summary> </entry> <entry><title>2015 Mock FRQ</title><link href="https://alvinzhengq.github.io/CSA-Data-Structures/posts/frq15/" rel="alternate" type="text/html" title="2015 Mock FRQ" /><published>2022-04-21T00:00:00+00:00</published> <updated>2022-04-21T00:00:00+00:00</updated> <id>https://alvinzhengq.github.io/CSA-Data-Structures/posts/frq15/</id> <content src="https://alvinzhengq.github.io/CSA-Data-Structures/posts/frq15/" /> <author> <name>Alvin Zheng</name> </author> <summary> Code Question 1: Question 2: Question 3: </summary> </entry> <entry><title>2015 Mock MCQ Corrections</title><link href="https://alvinzhengq.github.io/CSA-Data-Structures/posts/mcq15/" rel="alternate" type="text/html" title="2015 Mock MCQ Corrections" /><published>2022-04-20T00:00:00+00:00</published> <updated>2022-04-20T00:00:00+00:00</updated> <id>https://alvinzhengq.github.io/CSA-Data-Structures/posts/mcq15/</id> <content src="https://alvinzhengq.github.io/CSA-Data-Structures/posts/mcq15/" /> <author> <name>Alvin Zheng</name> </author> <summary> Result Corrections: Question 27 Sort is a selection sort, meaning at each iteration the smallest element will be moved to front of the current unsorted subarray by swapping with whatever element is currently at the beginning of the unsorted subarray. Therefore, the array should progress like this during first three iterations: {1, 3, 2, 5, 4, 6} {1, 2, 3, 5, 4, 6} {1, 2, 3, 5, 4, ... </summary> </entry> <entry><title>AP Exam Personal Study Guide</title><link href="https://alvinzhengq.github.io/CSA-Data-Structures/posts/studyguide/" rel="alternate" type="text/html" title="AP Exam Personal Study Guide" /><published>2022-04-18T00:00:00+00:00</published> <updated>2022-04-18T00:00:00+00:00</updated> <id>https://alvinzhengq.github.io/CSA-Data-Structures/posts/studyguide/</id> <content src="https://alvinzhengq.github.io/CSA-Data-Structures/posts/studyguide/" /> <author> <name>Alvin Zheng</name> </author> <summary> My Personal Study Guide for the AP CSA Exam Red Topics (Topics Needing Immediate Review): Dynamic Binding Vehicle v = new Car();, is an example of Dynamic Binding which will use Car’s methods unless overriden. Inheritance (Super Classes) class Child extends Parent, child classes will inherit all of parent’s methods. Insertion, Bubble, Merge, Select... </summary> </entry> </feed>
